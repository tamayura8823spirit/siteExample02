

[ 概要 ]
プログラミングには、ざまざまな学ぶべき情報が出てくる
変数や関数などにも多くのルールが存在していて、初めてプログラミングに触れた人は、なぜそれほどまでにルールがたくさんあるのか、
それらがどういった意味を持つのか理解するのが大変になる

大変なのは当たり前で、プログラミングの世界では、多くの頭のよい人たちが、何十年もかけてルールを考え、試行錯誤し続けてきた
それも、わかりやすくするためにではなく、熟練者にとって便利になるようにである
そうした結果が積み重なったものが、現在のプログラミング言語のルールであり、それを初めてプログラミングをおこなう人が、いきなり丸ごと理解できるわけがない

プログラミングでは、 A を知るには B の知識が必要で、 B を知るには A の知識が必要といった、
どちらを学べばよいのかわからないようなことがよく存在する
どうしてそういうことになっているかというと、何十年もかけて、それぞれの仕様がお互いに関連しながら改良されてきたためである
そのため、一度学んでわからなかったことが、しばらくプログラムを書き続けたあと学び直すと、すんなり分かるといったことが多々ある

（著者は、）プログラミングは、スポーツに近いと思っており、スポーツでは、体を動かして、その上で理論を学び成長していく
同じようにプログラミングも、コードを書き、その上で理解を深めていく

プログラミング初学者とやりとりしていて気付くのは、完璧に理解しようとして先に進めず挫折する人が多いことである
プログラミングでは、書くことと、理解することは両論である

なので、完璧に理解するまで手を動かさないのではなく、
 「分からなくても進む」 「とりあえず書いてみる」 「その上で、何度も同じことを学習する」
といったやり方が向いている



