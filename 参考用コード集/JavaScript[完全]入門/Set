

[ Set ]

* Set は、重複しない値の集合を作る、値をどんどん追加していき、同じ値のときは格納しない
* new Set()  で新しいインスタンスを作って、メソッドでデータの出し入れをおこなう



[ Setのプロパティとメソッド ]

.size           |	値の数
- - - - - - - - - - - -
.clear()        |	データを全て削除
.add( v )       |	値( v )をSetに登録、Set 自身を返す
.has( v )       |	値( v )がすでにあるなら true、ないなら false を返す
.delete( v )    |	値( v )を削除、成功したら true、なかったら false を返す
.values()       |	値を挿入順に取り出せる Iterator オブジェクトを返す
.entries()      |	[ 値 , 値 ] を挿入順に取り出せる iterator オブジェクトを返す
.forEach( f )   |	関数( f )で全てのデータを処理する、関数( f )は、第１引数が値、第２引数が値、第３引数が Set オブジェクト自身になる



[ 作成方法 ]

①
const mySet = new Set();
mySet.add( 'コーヒー' );
mySet.add( 'コーヒー' );
mySet.add( 'ケーキ' );

// 結果は、重複部分は取り除かれて、「コーヒー、ケーキ」 という中身になる


②
const mySet = new Set([
  'コーヒー'　,
  'コーヒー'　,
  'ケーキ'
]);

// 直接Set()の引数に、値の配列を渡している


