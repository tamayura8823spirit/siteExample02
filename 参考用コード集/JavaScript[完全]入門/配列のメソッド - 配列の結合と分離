

        ==  concat  ==


// 配列を作成
const arr1 = ['コーヒー', '紅茶'];
const arr2 = ['ケーキ', 'クッキー'];
const arr3 = ['サンドイッチ', 'トースト'];

// concat()で結合してコンソールに出力
console.log(arr1.concat(arr2, arr3));
console.log(arr1.concat('プリン', arr2, 'ゼリー'));

// 元の配列は影響を受けない
console.log(arr1);


// 結果
['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'サンドイッチ', 'トースト']
['コーヒー', '紅茶', 'プリン', 'ケーキ', 'クッキー', 'ゼリー']
['コーヒー', '紅茶']


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


        ==  slice ==


// 配列を作成
const arr = ['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'プリン']

// slice()で一部を抜き出してコンソールに出力
console.log(arr.slice(1, 3));
console.log(arr.slice(2));
console.log(arr.slice(-2));

// 元の配列は影響を受けない
console.log(arr);


// 結果
 (2) ['紅茶', 'ケーキ']
 (3) ['ケーキ', 'クッキー', 'プリン']
 (2) ['クッキー', 'プリン']
 (5) ['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'プリン']


// 解説
" 負 "の数を指定したときは、末尾からその位置までの値を取り出せる
" 1つ "指定したときは、その位置 "以降" の値を取り出せる


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


        ==  splice ==


// 配列を作成
const arr1 = ['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'プリン'];

// splice()で一部を抜き出す
const arr2 = arr1.splice(1, 2);

// 抜き出した配列をコンソールに出力
console.log(arr2);

// 元の配列は影響を受ける
console.log(arr1);


// 結果
 (2) ['紅茶', 'ケーキ']
 (3) ['コーヒー', 'クッキー', 'プリン']


 - - - - -


// 引数に" １つだけ "を指定した例
const arr1 = ['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'プリン'];
const arr2 = arr1.splice(2);

console.log(arr2);
console.log(arr1);


// 結果
 (3) ['ケーキ', 'クッキー', 'プリン']
 (2) ['コーヒー', '紅茶']


 - - - - -


// 抜き出しつつ、他の要素を追加した例
const arr1 = ['コーヒー', '紅茶', 'ケーキ', 'クッキー', 'プリン'];
const arr2 = arr1.splice(1, 2, '★', '☆', '★');

console.log(arr2);
console.log(arr1);


// 結果
 (2) ['紅茶', 'ケーキ']
 (6) ['コーヒー', '★', '☆', '★', 'クッキー', 'プリン']


