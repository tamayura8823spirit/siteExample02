

* クラスは、それを元にした新しいクラスを作成できる
  このとき、元になったクラスを" 親クラス "、新しいクラスを" 子クラス "と呼ぶ
  子クラスは、親クラスの特徴を全て持っており、その上で一部のデータが変わっていたり、新しいデータや機能が加わったりしている
  
* こうした現象は、現実世界では商品開発などでよく見られる
  たとえば A という車を作ったあと、内装を豪華にした B という車を作る  あるいはエンジンを改良した C という車種を出す
  こうした商品ラインナップは、「親となる車」があったあと、それらを少し変えた「子となる車」を作るという手法
  
* オブジェクト指向のプログラミングでも、このような似たような機能のものを、段階的に作っていくことで、プログラムをわかりやすく組み立てていく
  

