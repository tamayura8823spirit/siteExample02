

*  await の処理を try~catch 文で囲うと、 reject() を catch() で捕まえられる


- - - - - - 


• 例文

function wait(msg, isResolve = true) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      if (isResolve) {
        resolve(msg);
      } else {
        reject(`error (${msg}) `);
      }
    }, 100);
  });
};

async function exec() {
  console.log('--- 処理開始 ---');

  console.log(await wait('処理A'));
  console.log(await wait('処理B'));

try {
  // 例外が発生するかもしれない処理
  console.log(await wait('処理C', false));
  console.log(await wait('処理D'));
} catch(e) {
  // 例外発生時の処理
  console.log('例外発生', e);
}

  console.log('--- 処理終了 ---');
};

exec();



// 結果
--- 処理開始 ---
処理A
処理B
例外発生 error (処理C) 
--- 処理終了 ---



