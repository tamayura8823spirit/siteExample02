

        ==  forEach ==
        

// 配列とカウンターを作成
const arr = [1, 2, , , , , , 3];
let cnt = 0;

// forEach()で各要素を処理
arr.forEach((x, i) => {
  console.log(`要素${i}、値は「${x}」`);
  cnt ++;
});

// コンソールに出力
console.log(`要素数は${arr.length}、実行数は${cnt}`);


// 結果
 要素0、値は「1」
 要素1、値は「2」
 要素7、値は「3」
 要素数は8、実行数は3


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


        ==  map ==


// 配列とカウンターを作成
const arr = [1, 2, 3, 4];

// map()で新しい配列を作成
const arr2 = arr.map(x => `${x}番目`);

// コンソールに出力
console.log(arr2);


// 結果
 (4) ['1番目', '2番目', '3番目', '4番目']


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


        ==   filter ==


// 配列を作成
const arr = [0, 1, 2, 3, 4, 5];

// filter()で偶数の要素だけを選ぶ
const arr2 = arr.filter(x => x % 2 === 0);

// コンソールに出力
console.log(arr2);


// 結果
 (3) [0, 2, 4]


 - - - - -
 

// filter() map() forEach() それぞれを組み合わせて利用する
// 配列に対して、メソッドチェーンで処理
[11, 22, 33, 44, 55, 66]
.map((x, i) => ({i: i, n: x}))
.filter(x => x.n % 2 === 0)
.forEach(x => console.log(`${x.i}番目${x.n}`));


// 結果
 1番目22
 3番目44
 5番目66


// 解説
まず map()で位置と値を記録したオブジェクトを作り、
次に filter()で値が偶数の要素のみを抜き出す
最後に forEach()で文字列にして出力する


