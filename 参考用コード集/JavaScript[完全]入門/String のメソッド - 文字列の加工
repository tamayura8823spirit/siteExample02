

[ 文字列の加工をするメソッド ]
.padEnd(n, s)         |   文字列長を n にするために、末尾を文字列 s で埋めた文字列を返す    元の文字列が n より短いときはそのまま返す     s を省略したときは半角スペース
.padStart(n, s)       |   文字列長を n にするために、先頭を文字列 s で埋めた文字列を返す    元の文字列が n より短いときはそのまま返す     s を省略したときは半角スペース
.repeat(n)            |   文字列を n回 繰り返す
.trim()               |   前後のホワイトスペースを除去した文字列を返す
.trimStart()          |   先頭のホワイトスペースを除去した文字列を返す
.trimEnd()            |   末尾のホワイトスペースを除去した文字列を返す
.toLowerCase()        |   小文字に変換した文字列を返す
.toUpperCase()        |   大文字に変換した文字列を返す



[ 文字列を抜き出すメソッド ]
.substr(ab)          |    a から開始して、文字数 b 個分の文字を得る    b を省略したら末尾まですべて    a が負のときは末尾から開始、 b が負のときは 0 とみなす


 - - - - -
 
 
[ 例文 ]


// .padEnd()の結果をコンソールに出力
console.log('--- padEnd ---');
console.log('|', 'abc'.padEnd(8, '#'), '|');
console.log('|', 'abc'.padEnd(8, ':-'), '|');
console.log('|', 'abc'.padEnd(8), '|');
console.log('|', 'abc'.padEnd(2, '@'), '|');

// .padStart()の結果をコンソールに出力
console.log('--- padStart ---');
console.log('|', '1234'.padStart(8, '0'), '|');
console.log('|', '1234'.padStart(8), '|');
console.log('|', '1234'.padStart(2, '0'), '|');

// .substr()で短くする
console.log('--- substr ---');
console.log('|', 'abc'.substr(0, 2), '|');   // 前２文字
console.log('|', 'abc'.substr(-2), '|');   // 後２文字



// 結果
 --- padEnd ---
 | abc##### |
 | abc:-:-: |
 | abc      |
 | abc |
 --- padStart ---
 | 00001234 |
 |     1234 |
 | 1234 |
 --- substr ---
 | ab |
 | bc |



// 解説
.padEnd() .padStart() は実例を見るとよりわかりやすいが、数値の見栄えを整えたりするときに良く使われる

文字列の長さよりも小さな数値を指定した場合に、元の文字列がそのまま表示されていることに注意する
強制的に短くしたい場合は、前述の.subStr()で短くもできる



