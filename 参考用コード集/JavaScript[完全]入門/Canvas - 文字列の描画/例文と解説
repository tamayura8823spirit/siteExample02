

* 縦位置は、同じ設定でもフォントによって位置が異なるので、確認しながら調整するとよい


- - - - - -


[ 文字列描画用のプロパティ ]
.font         |    "bold 14px 'MS 明朝'" のようにして、スタイル、サイズ、種類を設定する
.textAlign    |   横方向の揃え位置を指定する、 start( 初期値 ) 、 end 、 left 、 right 、 center を指定可能
.textBaseline |   縦方向の揃え位置を指定する、 top 、 hanging 、 middle 、 alphabetic( 初期値 ) 、 ideographic( 漢字などの下端 ) 、 bottom を指定可能


[ 文字列描画のメソッド ]
.fillText( t, x, y, m )     |   文字列 t を、座標 x,y に塗りつぶし描画する   最大横幅 m も指定可能
.strokeText( t, x, y, m )   |   文字列 t を、座標 x,y に線描画する   最大横幅 m も指定可能
.measureText( t ).width     |   現在の設定で文字列 t を描画したときの横幅を得る


- - - - - -


[ 例文 ]

• HTML

  <canvas id="canvas" width="600" height="350"></canvas>


• JavaScript


const canvas = document.querySelector('#canvas');
const context = canvas.getContext('2d');

// 横幅、高さ、行の高さ
const w = canvas.width;
const h = canvas.height;
const lnH = 60;

// 縦線
context.fillRect(150, 0, 1, h);
context.fillRect(450, 0, 1, h);

// 横線
for(let y = lnH / 2; y <= h; y += lnH) {
  context.fillRect(0, y, w, 1);
}

// 設定
context.fillStyle = '#ccc';
context.strokeStyle = '#000';
context.lineWidth = 2;
context.font = 'bold 32px sans-serif';
const t = 'ftjyあ龍';

// 横位置を変えながら、左に描画
['start', 'end', 'left', 'right', 'center']
.forEach((align, i) => {
  context.textAlign = align;
  context.textBaseline = 'middle';

  context.fillText(t, 150, lnH * (i + 0.5));
  context.strokeText(t, 150, lnH * (i + 0.5));
});

// 縦位置を変えながら、右に描画
['top', 'hanging', 'middle', 'alphabetic', 'ideographic', 'bottom']
.forEach((baseline, i) => {
  context.textAlign = 'center';
  context.textBaseline = baseline;

  context.fillText(t, 450, lnH * (i + 0.5));
  context.strokeText(t, 450, lnH * (i + 0.5));
});



