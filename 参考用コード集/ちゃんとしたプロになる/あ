Lesson 2	フロントエンド技術の"いま"

　＃　レスポンシブ対応のこれまで 
レスポンシブWebデザインとは、Webサイトの制作手法の１つで、デバイスごとに別々のHTMLを用意するのではなく、
１つのHTMLをベースに、多様なデバイス・環境での閲覧に対応する手法をいう
ガラケー時代は携帯からのWeb閲覧がなく、また、この手法が確立する以前は、デバイスごとに作り分けていた時代もあった
デスクトップ用に製作したサイトを基準に、モバイルサイトのデザインを決定する制作フローで、トップページのみで構成したり、コンテンツ省略したりしていた 
このやり方では、最低でも２つ、タブレットも含めるなら３種類のデザイン・HTMLを作成することになり、大変なコストがかかった 
　（現在でも UI も大きく変える場合は別サイトの対応が行われる）
	【デバイスごとに別対応するメリット・デメリット】
    メリット
          |	・各デバイスに適したデザインを実装できる
          |	・モバイルサイトではコンテンツや画像を軽量化したり、さまざまな最適化が行える
	ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
	デメリット		|	・運用コストがかかる、変更を加える場合はすべてを修正しないといけない　（CMSを使うと修正の手間は軽減できる）
					|	・制作コストがかかる

　＃　デスクトップファーストとモバイルファースト 
以前は、デスクトップ用のサイトを最初に制作し、モバイル版ではそれを１カラムで表示させるのが主流だった （デスクトップファースト）
しかしこのやり方では、大きな画面を基準にコンテンツを作成するとどうしてもコンテンツが増え、モバイルサイトで溢れてしまう、という問題が起こっていた 
なので近年では、モバイルの表示を基準にして設計してから、CSSを大きなデバイス用にに切り替えていく手法が主流になっている （モバイルファースト）
	【メモ】
	モバイルファーストは手法や考え方を指す言葉で、 「モバイルサイトを先に作る」 という作業手順のことではない

　＃　ブレイクポイントの考え方 
数値をいくつで設定するかについて、これといった絶対的な決まりはなく、ブレイクポイントの数もデバイスの切り分け数によって変わっていく 
比較的よくあるのは 「スマートフォンと表示幅が小さめのタブレット」 と 「表示幅が広めのタブレットとPC」 の境界にあたる 「768px」 を設定するケース
ほかにも、スマートフォンとタブレットの境界にあたる 「415px」 、タブレットとPCの境界にあたる 「960px」 の２つをブレークポイントとする例がある
スマートフォンの新機種が登場すれば、表示幅の主流やシェアは移り変わるし、どの年代までのものを対象範囲としてカバーするかも関わってくる 
	【ポイント】
	現在普及しているスマートフォンの画面幅は 320px ~ 414px 、タブレットの画面幅は 600px ~ 834px のようなサイズとなっている
	 ipad などのタブレットで最も多いのが 768px

　＃　デバイスごとの設計の留意点ポイント 
レスポンシブWebデザインを実装する際には、モバイルファースト、デスクトップファーストのいずれを採用するにせよ、
小さいあるいは大きい表示幅を基準に設計したあと、サイズの異なる表示幅に合わせて CSS の調整を行うことになる

　＃　<モバイル表示>の設計 
 iPhoneSE など、小さいサイズを基準にするのであれば、 「320px」 という数値を考慮する
 iPhone X などの表示幅である 375px に合わせてデザインすると、 iPhoneSE ではレイアウトが崩れてしまう
近年では大型化が進み、 375px 以上が主流になったともいわれるが、 iPhoneSE を対象に含むのであればそれを念頭に置いておく

　＃　<タブレット表示>の設計 
モバイルファーストの手法で、モバイルを基準に設計したコンテンツを、タブレットの画面に合わせて調整していく場合は、 
ボタンの大きさなどタッチ操作のしやすさを保ちながら、タブレットの画面に合わせた調整を行う 
	【タブレット表示で調整する主なポイント】
	カラムの表示数		|	モバイルでは１カラムの縦積みレイアウトで表現する部分を、タブレットでは横に並べて表示した方が、一覧表示などが見やすくなる
	ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
	フォントサイズ		|	タブレットの画面で横幅や画像がモバイルよりも大きめに表示された時に、文字サイズが同じままではバランスが悪い
						|	本文の文字サイズを大きくした場合はバランスを考慮し、見出しなど他の要素の文字サイズも調整する
	ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
	コンテンツの最大値		|	モバイルでの表示時には、横幅を表示領域の 100% 指定する箇所が多くなる
						|	しかしタブレットの画面で横幅 100% は非常に読みづらいので、コンテンツ幅に最大値 （max-width） を設定する

制作にかけられる予算や時間の関係で、タブレット専用のデザインが作成されていない場合も多くある 
モバイルとPCで切り替える場合、タブレット表示をモバイルファーストで設計する場合と、デスクトップファーストで設計する場合、どちらも存在する
	【タブレット表示の設計の留意点】
	モバイルファーストの場合	|	・モバイルの小さな表示幅を基準にするため、タブレットでコンテンツが溢れ、表示が崩れる問題が起こりにくい
							|	・タッチ操作する前提の設計がされているため、タブレットでも自ずと操作しやすい設計になる
	ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
	デスクトップファースト		|	・デスクトップ表示の縮小が基本となるため、タブレットではクリックしづらいデザインになり、レイアウトの調整工数も増える
	の場合					|	・大きな画面が基準となるため、１画面により多くの情報を表示でき、一卵性や操作性が高まる場合もある

これらを考慮すると、特に入力フォームが多いWebサイトでは、タッチ入力の操作性の点から、モバイルファーストでのデザインが適していると言える
一方、カードを多用する一覧ページなどは、デスクトップを基準にして縮小した方が一覧性が高まる 
また、グローバルナビゲーションはデスクトップを基準にした方が、開閉操作のナビゲーションよりアクセスのしやすさは向上する 
この部分を柔軟に調整できるようになると、レスポンシブ実装の腕前が上がったと言えるだろう 

　＃　<PC>表示の設計
 
 		メリット
					|	・各デバイスに適したデザインを実装できる
					|	・モバイルサイトではコンテンツや画像を軽量化したり、さまざまな最適化が行える
	ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
		デメリット
					|	・運用コストがかかる、変更を加える場合はすべてを修正しないといけない　（CMSを使うと修正の手間は軽減できる）
					|	・制作コストがかかる


